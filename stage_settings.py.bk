__author__ = 'zfz'
import os

DEBUG = False
TEMPLATE_DEBUG = DEBUG

SESSION_EXPIRE_AT_BROWSER_CLOSE = False  
SESSION_COOKIE_AGE = 48*60*60             

PROJECT_ROOT = os.path.abspath(os.path.dirname(__file__))

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql', # Add 'postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': 'shopmgr',                      # Or path to database file if using sqlite3.
        'USER': 'qiyue',                      # Not used with sqlite3.
        'PASSWORD': 'youni_2014qy',                  # Not used with sqlite3.
        'HOST': 'jconnfymhz868.mysql.rds.aliyuncs.com',                      # Set to empty string for localhost. Not used with sqlite3. #192.168.0.28
        'PORT': '3306',                      # Set to empty string for default. Not used with sqlite3.
        'OPTIONS':  {#'init_command': 'SET storage_engine=Innodb;', 
                     'charset': 'utf8'}, #storage_engine need mysql>5.4,and table_type need mysql<5.4
    }
}

if DEBUG:
    STATICFILES_DIRS = (
       os.path.join(PROJECT_ROOT,"site_media","static"),
    )
    STATIC_ROOT = os.path.join(PROJECT_ROOT, "site_media", "local")
else:
    STATICFILES_DIRS = (
       os.path.join(PROJECT_ROOT,"site_media","static"),
    )
    STATIC_ROOT = "/data/site_media/static"

M_STATIC_URL = '/'

ALLOWED_HOSTS = ['.huyi.so','.xiaolu.so','.xiaolumeimei.com','.xiaolumm.com','121.199.168.159']

CACHES = {
    'default': {
        'BACKEND': 'redis_cache.RedisCache',
        'LOCATION': '55a32ec47c8d41f7.m.cnhza.kvstore.aliyuncs.com:6379',
        'OPTIONS':{
            'DB': 1,
            'PASSWORD': '55a32ec47c8d41f7:Huyiinc12345',
        }
    }
}

BROKER_URL = 'redis://:55a32ec47c8d41f7:Huyiinc12345@55a32ec47c8d41f7.m.cnhza.kvstore.aliyuncs.com:6379/2'

import raven

RAVEN_CONFIG = {
    'dsn': 'http://b24693ab54e6461484b277a3668ba383:ec4163971e8a4fdc98dd0a7a90a03201@sentry.xiaolumm.com/2',
    # If you are using git, you can also automatically configure the
    # release based on the git info.
    #'release': raven.fetch_git_sha(os.path.dirname(__file__)),
}


#WEB DNS
SITE_URL = 'http://admin.xiaolumm.com/'
#WAP DNS
M_SITE_URL = 'http://m.xiaolumeimei.com'  

####################### TRADE HANDLERS CONFIG ########################
TRADE_HANDLERS_PATH = (
   'shopback.trades.handlers.InitHandler',
   'shopback.trades.handlers.ConfirmHandler',
   'shopback.trades.handlers.SplitHandler',
   'shopback.trades.handlers.MemoHandler',
   'shopback.trades.handlers.DefectHandler',
   'shopback.trades.handlers.RuleMatchHandler',
   'shopback.trades.handlers.StockOutHandler',
   'shopback.trades.handlers.MergeHandler',
   'shopback.trades.handlers.RefundHandler',
   'shopback.trades.handlers.LogisticsHandler',
#    'shopback.trades.handlers.InterceptHandler',
   'shopback.trades.handlers.RegularSaleHandler',
   'shopback.trades.handlers.FinalHandler',
#    'shopback.trades.handlers.FlashSaleHandler',
)
################### SALEORDER CONFIG ##################
#sale order regular days
REGULAR_DAYS = 10

#################### TAOBAO SETTINGS ###################
#APPKEY = '21532915'   #app name super ERP test ,younixiaoxiao
#APPSECRET = '7232a740a644ee9ad370b08a1db1cf2d'

APPKEY = '12545735'   #app name guanyi erp ,younishijie
APPSECRET = '5d845250d49aea44c3a07d8c1d513db5'

TAOBAO_API_HOSTNAME = 'eco.taobao.com'
AUTHRIZE_URL   = 'https://oauth.taobao.com/authorize'
AUTHRIZE_TOKEN_URL  = 'https://oauth.taobao.com/token'
REDIRECT_URI        = '/accounts/login/auth/'
TAOBAO_API_ENDPOINT = 'https://%s/router/rest'%TAOBAO_API_HOSTNAME
TAOBAO_NOTIFY_URL   = 'http://stream.api.taobao.com/stream'

SCOPE = 'item,promotion,usergrade'
REFRESH_URL = 'https://oauth.taobao.com/token'

BASE_FONT_PATH = '/data/fonts/'
FONT_PATH = '/usr/share/fonts/truetype/ttf-dejavu/DejaVuSerif-Bold.ttf'
ASYNC_FILE_PATH = os.path.join(PROJECT_ROOT,"site_media","asyncfile")

################### HTTPS/SSL SETTINGS ##################
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
HTTPS_SUPPORT = False
SECURE_REQUIRED_PATHS = (
    '/admin/',
)

################### WEIXIN SETTINGS ##################

WEIXIN_API_HOST    = "https://api.weixin.qq.com"
WEIXIN_MEDIA_HOST  = "http://file.api.weixin.qq.com"
WEIXIN_QRCODE_HOST = "https://mp.weixin.qq.com"
WEIXIN_AUTHORIZE_URL = "https://open.weixin.qq.com/connect/oauth2/authorize"
WEIXIN_APPID       = 'wxc2848fa1e1aa94b5'
WEIXIN_SECRET      = 'bc41b3a535b095afc55cd40d2e808d9c'

WXPAY_APPID    = "wx3f91056a2928ad2d"
WXPAY_SECRET   = "e8e1f648a5e02492e1584e5413cef158"

WXAPP_ID       = "wx25fcb32689872499"
WXAPP_SECRET   = "3c7b4e3eb5ae4cfb132b2ac060a872ee"

################### JINGDONG SETTINGS #################

JD_APP_KEY = 'F9653439C316A32BF49DFFDE8381CBC9'
JD_APP_SECRET = 'f4fe333676af4f4eaeaa00ed20c82086'

JD_API_HOSTNAME = 'gw.api.360buy.com'
JD_AUTHRIZE_URL = 'https://auth.360buy.com/oauth/authorize'
JD_AUTHRIZE_TOKEN_URL = 'https://auth.360buy.com/oauth/token'
JD_REDIRECT_URI    = '/app/jd/login/auth/'
JD_API_ENDPOINT = 'http://%s/routerjson'%JD_API_HOSTNAME

################### PING++ SETTINGS ##################

PINGPP_CLENTIP = "180.97.163.149"
PINGPP_APPID   = "app_LOOajDn9u9WDjfHa"
#PINGPP_APPKEY = "sk_test_8y58u9zbPWTKTGGa1GrTi1mT"
PINGPP_APPKEY  = "sk_live_HOS4OSW10u5CDyrn5Gn9izLC"

################### Ntalker SETTINGS ##################

NTALKER_NOTIFY_URL = 'http://wx.ntalker.com/agent/weixin'
WX_MESSAGE_URL = 'https://api.weixin.qq.com/cgi-bin/message/custom/send'
WX_MEDIA_UPLOAD_URL = 'https://api.weixin.qq.com/cgi-bin/media/upload'
WX_MEDIA_GET_URL = 'https://api.weixin.qq.com/cgi-bin/media/get'

################### QINIU SETTINGS ##################

QINIU_ACCESS_KEY = "M7M4hlQTLlz_wa5-rGKaQ2sh8zzTrdY8JNKNtvKN"
QINIU_SECRET_KEY = "8MkzPO_X7KhYQjINrnxsJ2eq5bsxKU1XmE8oMi4x"
QINIU_PRIVATE_BUCKET = 'invoiceroom' 
QINIU_PRIVATE_DOMAIN = '7xrpt3.com2.z0.glb.qiniucdn.com'

LOGGER_HANDLERS = [
    'models',
    'queryset',
    'django.request',
    'sentry.errors',
    'celery.handler',
    'notifyserver.handler',
    'yunda.handler',
    'mail.handler',
    'xhtml2pdf',
    'restapi.errors',
    'weixin.proxy',
]

LOGGER_TEMPLATE = {
    'handlers': ['sentry'],
    'level': 'DEBUG',
    'propagate': True,
}

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': '/tmp/django-debug.log',
            'formatter': 'simple'
        },
        'sentry': {
            'level': 'ERROR',
            'class': 'raven.contrib.django.raven_compat.handlers.SentryHandler'
        },
        'console':{
            'level':'DEBUG',
            'class':'logging.StreamHandler',
            'formatter': 'simple'
        },
        'mail_admins': {
            'level': 'INFO',
            'class': 'django.utils.log.AdminEmailHandler',
            'include_html': True,
        }
    },
    'loggers': dict([(handler,LOGGER_TEMPLATE) for handler in LOGGER_HANDLERS]),
}
